<!-- BASE LAYER
     Rather than copying and pasting this repeatedly,
     create a base ejs file for all other ejs files
     to include.
-->

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>KinetikTXT</title>
        <link rel="stylesheet" href="/styles/core.css">

        <!-- IMPORTANT -->
        <!-- This ensures the clients are connecting to the Socket.io server -->
        
        <!-- Use this src when running the server on Goldsmiths servers (they're weird) -->
        <!-- https://www.doc.gold.ac.uk/usr/435/socket.io/socket.io.js -->
        <!-- Use this src when running the server elsewhere -->
        <!-- /socket.io/socket.io.js -->
        <script src="https://www.doc.gold.ac.uk/usr/435/socket.io/socket.io.js"></script>
        <script>
            // Use this path "/usr/435/socket.io" when running the server on Goldsmiths servers (they're weird)
            // Otherwise use this path ""
            const socket = io({path:"/usr/435/socket.io"})

            function fireServerFound()
            {
                console.log("Connected to KinetikTXT Server")

                // Add a listener for "updateGlobalMessages" ONLY if the message container exists
                const messagesContainer = document.getElementById("globalMessages")
                if (messagesContainer)
                {
                    socket.on("updateGlobalMessages", (globalMessageStorage) => fireUpdateGlobalMessage(globalMessageStorage, messagesContainer))
                }

                // Add a listener for "updateRandomWord" ONLY if the word container exists
                const randomWordContainer = document.getElementById("randomWordContainer")
                if (randomWordContainer)
                {
                    socket.on("updateRandomWord", (randomWord) => fireUpdateRandomWord(randomWord, randomWordContainer))
                }

                // Add a listener for the chat input ONLY if it exists
                const chatForm = document.getElementById("chatForm")
                if (chatForm)
                {
                    chatForm.addEventListener("submit", invokeSendGlobalMessage)
                }

                socket.on("disconnect", fireServerLost)

                // Tell the Server the Client is ready to sync
                socket.emit("clientReady")
            }

            function fireServerLost()
            {
                console.log("Disconnected from KinetikTXT Server")
            }

            function fireUpdateGlobalMessage(globalMessageStorage, messagesContainer)
            {
                console.log("Update from KinetikTXT Server Received")

                // Clear existing messages
                messagesContainer.innerHTML = ""

                // Add new messages
                globalMessageStorage.forEach(message => 
                {
                    const messageElement = document.createElement("div")

                    // Create a link to the user's profile
                    const usernameLink = document.createElement("a")
                    usernameLink.href = `https://www.doc.gold.ac.uk/usr/435/profile?user=${message.user_id}`
                    usernameLink.className = "generic-link"
                    usernameLink.textContent = message.username

                    // Put everything together
                    // https://developer.mozilla.org/en-US/docs/Web/API/Document/createTextNode
                    messageElement.appendChild(usernameLink)
                    messageElement.appendChild(document.createTextNode(`: ${message.content}`))

                    messagesContainer.appendChild(messageElement)
                })
            }

            function fireUpdateRandomWord(randomWord, randomWordContainer)
            {
                console.log("Update from KinetikTXT Server Received")

                // Set new word
                randomWordContainer.innerHTML = `The new word is... <span class="kinetik-blue">${randomWord}</span>`
            }

            function invokeSendGlobalMessage(event)
            {
                event.preventDefault()

                const chatInputContents = document.getElementById("chatInput")
                const message = chatInputContents.value

                console.log("Sent Message Data to KinetikTXT Server")
                socket.emit("sendGlobalMessage", message)

                chatInputContents.value = ""
            }

            // Check if the Client is connect to the Server
            socket.on("connect", fireServerFound)
        </script>
    </head>

    <body>
        <!-- Dynamic Header -->
        <!-- Other (route).js files will indicate if they want the header to be shown -->
        <% if (showHeader) { %>
        <div class="navbar">
            <% if (showProfile) { %>
                <!-- Show functional version of index page -->
                <a href="https://www.doc.gold.ac.uk/usr/435/globalchat" class="nav-text">
                    <button class="nav-button">H O M E</button>
                </a>

                <!-- Show profile button -->
                <a href="https://www.doc.gold.ac.uk/usr/435/profile" class="nav-text">
                    <button class="nav-button">P R O F I L E</button>
                </a>
            <% } else { %>
                <a href="/" class="nav-text">
                    <button class="nav-button">H O M E</button>
                </a>

                <!-- Show login button -->
                <a href="https://www.doc.gold.ac.uk/usr/435/login" class="nav-text">
                    <button class="nav-button">L O G   I N</button>
                </a>
            <% } %>

            <a href="https://www.doc.gold.ac.uk/usr/435/database" class="nav-text">
                <button class="nav-button">D A T A B A S E</button>
            </a>
            <a href="https://www.doc.gold.ac.uk/usr/435/about" class="nav-text">
                <button class="nav-button">A B O U T</button>
            </a>
        </div>
        <% } %>
        
        <div>
            <!-- IMPORTANT -->
            <!-- Other (route).js files will insert their content here. -->
            <%- body %>
        </div>
    </body>

    <!-- IMPORTANT -->
    <!-- Certain scripts also need to be ran after loading the webpage-->
    <!-- This script handles URL query parameters-->
    <script>
        // Function to get a specific parameter
        function getQueryParam(name) 
        {
            const urlParams = new URLSearchParams(window.location.search)
            return urlParams.get(name)
        }
        
        const error = getQueryParam("error")
        if (error === "register")
        {
            const infoString = getQueryParam("info")
            if (infoString)
            {
                // Convert the info back into a javascript object
                const errorObject = JSON.parse(decodeURIComponent(infoString))

                alert(`Registration failed!\n${errorObject.registerMessages.join("\n")}`)

                // Repopulate the register form for user convenience 
                const registerForm = document.getElementById("registerForm")

                if (registerForm) 
                {
                    registerForm.elements.registerUsername.value = errorObject.registerData.username
                    registerForm.elements.registerEmail.value = errorObject.registerData.email
                }
            }
            else
            {
                // If for whatever reason info is passed from the server
                // Show a generic error message
                alert("Registration failed! Something went wrong...")
            }
        }
        else if(error === "login")
        {
            // Generic login error message don't give info for brute force attacks
            alert("Login Failed!\nPlease check that your email and password are correct...")
        }
    </script>
</html>